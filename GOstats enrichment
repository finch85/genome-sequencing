library(GOstats)  
setwd("G:\\cuffdiff_out4"); ## set directory
goframeData <- read.table("PCL.ipr2go",head=F); 
## 读取数据。数据来源：interproscan注释得到每个基因的ipr号，然后通过ipr2go将ipr的id映射到goterm。
# 列evidence表明数据是从相似性比对得到的，随意填。
head(goframeData);
       go_id evidence   gene_id
1 GO:0003676      ISA PCL_00001
2 GO:0046983      ISA PCL_00001
3 GO:0000166      ISA PCL_00004
4 GO:0008152      ISA PCL_00004
5 GO:0016491      ISA PCL_00004
6 GO:0003676      ISA PCL_00005
names(goframeData) <- c("go_id","evidence","gene_id"); ## 命名
head(goframeData); ## 结果同上
## 生成GOFrame 对象
goFrame=GOFrame(goframeData,organism="P.lilacinium"); 
## 打包，Gostats会将其装进GO.db中，会将每一个go term 对应的上层GO term 也赋予到对应的gene_id, 并进行之后的富集。
goAllFrame=GOAllFrame(goFrame);
goAllFrame;
library("GSEABase");
gsc <- GeneSetCollection(goAllFrame, setType = GOCollection()); ## 生成基因组GO注释包
## 以整个基因组基因id为背景。无论是否有go注释， GOstats会将无注释的基因去掉
universe <- read.table("pep.id.mapping",head=F,stringsAsFactors = F); 
universe <- universe[,2];
head(universe);
[1] "PCL_00001" "PCL_00002" "PCL_00003" "PCL_00004" "PCL_00005" "PCL_00006"
 ## 读取差异表达基因id，必须保证gene_id名称一致。
genes <- read.table("gene_exp_up.id",head=F,stringsAsFactors = F);
genes <- genes[,1];
head(genes)
       V1
1 PCL_04016
2 PCL_04127
3 PCL_03284
4 PCL_03317
5 PCL_03339
6 PCL_03362
## 生成参数对象
params <- GSEAGOHyperGParams(name="My Custom GSEA based annot Params",
                             geneSetCollection=gsc,
                             geneIds = genes,
                             universeGeneIds = universe,
                             ontology = "MF",
                             pvalueCutoff = 0.05,
                             conditional = FALSE,
                             testDirection = "over")
## 富集分析
Over <- hyperGTest(params)
head(summary(Over))
  GOMFID       Pvalue OddsRatio  ExpCount Count Size
1 GO:0003735 1.167968e-22 11.368896  55.45621   104  114
2 GO:0005198 1.816571e-21  7.542269  65.18537   117  134
3 GO:0016491 9.817068e-06  1.368628 436.83925   496  898
4 GO:0016853 1.905303e-04  2.666299  30.64685    45   63
5 GO:0016614 3.983283e-04  1.867537  62.75308    82  129
6 GO:0015078 1.198734e-03  2.899721  19.94478    30   41
                                                      Term
1                       structural constituent of ribosome
2                             structural molecule activity
3                                  oxidoreductase activity
4                                       isomerase activity
5 oxidoreductase activity, acting on CH-OH group of donors
6          hydrogen ion transmembrane transporter activity
write.table(summary(Over),"gene_exp_up_go.enrichment",quote=F,row.names=F,sep="\t");
htmlReport(Over,"PCL_GO_enrichment.html");
###############################################################
## kegg 富集
## 转换数据
x <- read.csv("36-1A.KEGG.catalog.map.gene",head=T,sep="\t",stringsAsFactors = F);
x <- x[,c(3,6)];
for (i in 1:nrow(x)){
  a <- strsplit(x[i,2],";");
  a <- unlist(a);
  y <- cbind(x[i,1],a);
  write.table(y,"PCL_map.kegg",quote=F,row.names=F,sep="\t",col.names=F,append = T);
}
x <- read.table("PCL_map.kegg",head=F,stringsAsFactors = F)
a <- read.table("pep.id.mapping",head=F,stringsAsFactors = F)
x[,2] <- gsub("36-1AA","PCL_",x[,2])
x <- x[order(x[,2]),]
for (i in 1:nrow(a)){
x[,2] <- gsub(a[i,1],a[i,2],x[,2],fixed = T);
}
names(x) <- c("path_id","gene_id");
write.table(x,"PCL_map.kegg",quote=F,sep="\t",row.names=F);
## 读取数据做kegg富集
x <- read.table("PCL_map.kegg",head=T,sep="\t",stringsAsFactors = F)
x[,1] <- gsub("ko","",x[,1]);
keggFrame=KEGGFrame(x,organism="P.lilacinium");
gsc <- GeneSetCollection(keggFrame, setType = KEGGCollection());
universe <- read.table("pep.id.mapping",head=F,stringsAsFactors = F);
universe <- universe[,2];
genes <- read.table("gene_exp_up.id",head=F,stringsAsFactors = F);
genes <- genes[grep("PCL_",genes[,1]),];
kparams <- GSEAKEGGHyperGParams(name="My Custom GSEA based annot Params",
                                geneSetCollection=gsc,
                                geneIds = genes,
                                universeGeneIds = universe,
                                pvalueCutoff = 0.05,
                                testDirection = "over")
kOver <- hyperGTest(kparams)
head(summary(kOver))
summary(kOver)
write.table(summary(kOver),"gene_exp_kegg.enrichment",sep="\t",row.names=F,quote=F)
htmlReport(kOver,file='PCL_KEGGs_enrichment.html')
